# Instrument driver configuration file.

[General settings]
# The name is shown in all the configuration windows
name: heater_thermometrie_2021

# The version string should be updated whenever changes are made to this config file

# Modification of version 1.0 on 24.08.2016 by Marius Palm: Modifying the text displayed for "Reset instrument at startup"
# Version 2.0: Hardware fixes. 2019-04, Peter&Hans MÃ¤rki
version: 1.9.0

# Name of folder containing the code defining a custom driver. Do not define this item
# or leave it blank for any standard driver based on the built-in VISA interface.
driver_path: heater_driver

signal_generator: True

interface: Other

[Model and options]
# The option section allow instruments with different options to use the same driver

# List of models supported by this driver
model_str_1: Hardware
model_str_2: Simulation

# General VISA settings for the instrument.
[VISA settings]

# Enable or disable communication over the VISA protocol (True or False)
# If False, the driver will not perform any operations (unless there is a custom driver).
use_visa: False

# Define quantities in sections. This list is a selection of allowed keywords,
# see the manual for a full list of options
#   datatype:      The datatype should be one of DOUBLE, BOOLEAN, COMBO,
#                  STRING, COMPLEX, VECTOR, VECTOR_COMPLEX, PATH or BUTTON.
#   unit:          Quantity unit
#   set_cmd:       Command used to send data to the instrument. Put <*> where the value should appear.
#   get_cmd:       Command used to get the data from the instrument. Default is set_cmd?
#   def_value:     Default value
#   low_lim:       Lowest allowable value.  Defaults to -INF
#   high_lim:      Highest allowable values.  Defaults to +INF
#   combo_def_1:   First option in a pull-down combo box. Only used when datatype=COMBO
#   combo_def_2:   Second option in a pull-down combo box. Only used when datatype=COMBO
#   ...
#   combo_def_n:   nth option in a pull-down combo box. Only used when datatype=COMBO
#   state_quant:   Quantity that determines this control's visibility
#   state_value_1: Value of "state_quant" for which the control is visible
#   state_value_2: Value of "state_quant" for which the control is visible
#   ...
#   state_value_n: Value of "state_quant" for which the control is visible
#   permission:    Sets read/writability, options are BOTH, READ, WRITE or NONE. Default is BOTH 
#   group:         Name of the group where the control belongs.
#   section:       Name of the section where the control belongs.

[Control Heating Mode]
datatype: COMBO
def_value: off
combo_def_1: off
combo_def_2: manual
combo_def_3: controlled
combo_def_4: defrost
group: Control/Control Heating
section: Control

# [Expert]
# datatype: COMBO
# def_value: simple
# combo_def_1: simple
# combo_def_2: expert
# group: Control/Mode
# section: Control

[Logging]
datatype: COMBO
def_value: WARNING
combo_def_1: defrost
combo_def_2: INFO
combo_def_3: WARNING
# state_quant: Expert
# state_value_1: expert
group: Control/Mode
section: Control

[Temperature Heater Box (expert)]
datatype: DOUBLE
unit: C
def_value: -1000.0
permission: READ
# state_quant: Expert
# state_value_1: expert
group: Control/Temperature Box
section: Control

[Thermometrie (expert)]
datatype: COMBO
def_value: off
combo_def_1: off
combo_def_2: on
# state_quant: Expert
# state_value_1: expert
group: Control/Thermometrie
section: Control

[set power (mode manual)]
datatype: DOUBLE
unit: %
def_value: 0.0
low_lim: 0.0
high_lim: 100.0
# state_quant: Control Heating
# state_value_1: manual
group: Control/Control Heating
section: Control

[set temperature (mode controlled)]
datatype: DOUBLE
unit: K
def_value: 0.0
# state_quant: Control Heating
# state_value_1: controlled
group: Control/Control Heating
section: Control

[set temperature and settle (mode controlled)]
datatype: DOUBLE
unit: K
def_value: 0.0
# state_quant: Control Heating
# state_value_1: controlled
group: Control/Control Heating
section: Control

[temperature tolerance band (plus minus)]
datatype: DOUBLE
unit: K
def_value: 0.5
# state_quant: Control Heating
# state_value_1: controlled
group: Control/Control Heating
section: Control

[settle time (mode controlled)]
datatype: DOUBLE
unit: s
def_value: 60.0
# state_quant: Control Heating
# state_value_1: controlled
group: Control/Control Heating
section: Control

[timeout time (mode controlled)]
datatype: DOUBLE
unit: s
def_value: 300.0
# state_quant: Control Heating
# state_value_1: controlled
group: Control/Control Heating
section: Control

[Serial Number Heater]
datatype: STRING
def_value: ?
permission: READ
group: Status/Heater
section: Status

[Serial Number Insert]
datatype: STRING
def_value: ?
permission: READ
group: Status/Heater
section: Status

[Defrost - Switch on box]
datatype: COMBO
def_value: off
combo_def_1: off
combo_def_2: on
permission: READ
group: Status/Heater
section: Status

[Defrost - User interaction]
datatype: COMBO
def_value: wait
combo_def_1: wait
combo_def_2: Ready to open
permission: READ
group: Status/Heater
section: Status

[Settled]
datatype: BOOLEAN
def_value: False
permission: READ
group: Status/Heater
section: Status

[Error counter]
datatype: DOUBLE
def_value: 0.0
permission: READ
group: Status/Heater
section: Status

[Insert Connected]
datatype: COMBO
def_value: disconnected
combo_def_1: disconnected
combo_def_2: connected
permission: READ
group: Status/Insert
section: Status

[Carbon_Ohm (expert)]
datatype: DOUBLE
unit: Ohm
def_value: 0.0
permission: READ
# state_quant: Expert
# state_value_1: expert
group: Temperature/Resistance
section: Temperature

[PT1000_Ohm (expert)]
datatype: DOUBLE
unit: Ohm
def_value: 0.0
permission: READ
# state_quant: Expert
# state_value_1: expert
group: Temperature/Resistance
section: Temperature

[Carbon_K (expert)]
datatype: DOUBLE
unit: K
def_value: -1.0
permission: READ
# state_quant: Expert
# state_value_1: expert
group: Temperature/Temperature
section: Temperature

[PT1000_K (expert)]
datatype: DOUBLE
unit: K
def_value: -1.0
permission: READ
# state_quant: Expert
# state_value_1: expert
group: Temperature/Temperature
section: Temperature

[Temperature_K]
datatype: DOUBLE
unit: K
def_value: -1.0
permission: READ
group: Temperature/Temperature
section: Temperature

